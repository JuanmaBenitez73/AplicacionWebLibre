@page "/details"
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.JSInterop;
@inject IJSRuntime JSRuntime

<PageTitle>JuanmaAlvarry Potter</PageTitle>
<body id="details">
	<div>
		<div id="image">
			<a href=""><img width="400px" src="./images/hp.png" id="logo" /></a>
		</div>
		<div id="all2">

		</div>
		<div>
			<div id="bar" style="display: flex; justify-content: space-evenly; align-items: center; margin-bottom: 2rem; margin-top: 2rem;">
				<div style="padding: 15px; border-radius: 10px; background-color: rgb(10, 10, 10); border: 2px solid white; box-shadow: 0 0 20px -5px white;">
					<table>
						<tbody>
							<tr>
								<td>
									@if (@CurrentPage == 1)
									{
										<input style="border: 1px solid; padding: 5px; padding-left: 20px; padding-right: 20px; border-radius: 8px;" type="text" id="searchInput" placeholder="Buscar por nombre" @onkeyup="SearchCharacters">
									}
								</td>
								<td>
									<button disabled="@IsFirstPage" @onclick="Return" style="margin-left: 15rem; margin-right: 10rem; border: 1px solid; padding: 5px; padding-left: 20px; padding-right: 20px; background-color: rgb(10, 10, 10); border: 2px solid white; box-shadow: 0 0 15px -5px white; border-radius: 8px;"><img width="25px" height="25px" src="./images/flecha2.png" /></button>
								</td>
								<td>
									<button disabled="@IsLastPage" @onclick="Advanced" style="margin-right: 5rem; border: 1px solid; padding: 5px; padding-left: 20px; padding-right: 20px; background-color: rgb(10, 10, 10); border: 2px solid white; box-shadow: 0 0 15px -5px white; border-radius: 8px;"><img width="25px" height="25px" src="./images/flecha.png" /></button>
								</td>
								<td>
									@if (@CurrentPage == 1)
									{
										<button @onclick="SortCharactersAscending" style="border: 1px solid; padding: 5px; padding-left: 20px; padding-right: 20px; border-radius: 8px;">Ordenar Ascendente</button>
										<button @onclick="SortCharactersDescending" style="border: 1px solid; padding: 5px; padding-left: 20px; padding-right: 20px; border-radius: 8px;">Ordenar Descendente</button>
									}
								</td>
							</tr>
						</tbody>
					</table>
				</div>
			</div>
			<div id="container">
			</div>
			<br />
			<br />
		</div>
		<div style="display: flex; justify-content: center;">
			<iframe width="500px" height="300px" src="./video/Harry Potter y la Cámara Secreta- Dobby es libre.mp4"></iframe>
		</div>
		<div id="graphic">
			
		</div>
		<div style="display: flex; justify-content: center; margin-top: 7rem; padding-top: 1rem; padding-bottom: 1rem; color: white; background-color: rgb(50, 50, 50);">
			Página sobre muestreo de datos de Harry Potter - Información obtenida de la API oficial de Harry Potter: <a href="https://hp-api.onrender.com/" style="text-decoration: none; color: white;"><b>https://hp-api.onrender.com/</b></a>
		</div>
	</div>
</body>

@code {
	private IJSInProcessObjectReference module;

	int numShield = 1;

	private int CurrentPage = 1;
	private int TotalPages = 5;

	private bool IsFirstPage => CurrentPage == 1;
	private bool IsLastPage => CurrentPage == TotalPages;

	public void Advanced()
	{
		numShield++;
		LoadPage(numShield);
	}

	public void Return()
	{
		numShield--;
		LoadPage(numShield);
	}

	private async void LoadPage(int page)
	{
		CurrentPage = page;

		await ViewHouseShield();
		switch (CurrentPage)
		{
			case 1:
				await GetHpCharacters();
				break;
			case 2:
				await GetGryffindor();
				break;
			case 3:
				await GetSlytherin();
				break;
			case 4:
				await GetRavenclaw();
				break;
			case 5:
				await GetHufflepuff();
				break;
		}
	}

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();

		module = await JSRuntime.InvokeAsync<IJSInProcessObjectReference>("import", "./js/main.js");

		await ViewHouseShield();
		await GetHpCharacters();
	}

	private async Task GetHpCharacters() => await module.InvokeVoidAsync("getHpCharacters");
	private async Task ViewHouseShield() => await module.InvokeVoidAsync("viewHouseShield", numShield);

	private async Task GetGryffindor() => await module.InvokeVoidAsync("getGryffindor");
	private async Task GetSlytherin() => await module.InvokeVoidAsync("getSlytherin");
	private async Task GetRavenclaw() => await module.InvokeVoidAsync("getRavenclaw");
	private async Task GetHufflepuff() => await module.InvokeVoidAsync("getHufflepuff");

	private async Task SortCharactersAscending() => await module.InvokeVoidAsync("sortCharactersAscending");
	private async Task SortCharactersDescending() => await module.InvokeVoidAsync("sortCharactersDescending");
	private async Task SearchCharacters() => await module.InvokeVoidAsync("searchCharacters");
}